--create or replace procedure print_hello is
--1. Hello world procedure
set serveroutput on;
create or replace procedure print_hello is
    message VARCHAR(50) := 'Hello World';
begin
    DBMS_OUTPUT.PUT_LINE(message);
end;
/
execute print_hello();


--1.2 isEven true:1  false:0
create or replace function isEven (n INTEGER) return INTEGER is
begin
    if mod(n, 2)=0 then
        return 1;
    else
        return 0;
    end if;     
end;
/
SELECT isEven(9) FROM dual;


--1.3 loop:
DECLARE  
    i INTEGER :=1;
BEGIN
   -- FOR i IN 1..10 LOOP
    WHILE i<=10 LOOP
     dbms_output.put_line(i);
     i:=i + 1;
    END LOOP;
END;
/


/* 
4. Write a function which decides if the parameter number is prime or not. 
   In case of yes/no the function returns 1/0.
*/
--if interger is prime or not,true:1 false 0
create or replace function isPrime(n INTEGER) return INTEGER is
    rm INTEGER := 1;
    i INTEGER := 0;
begin
    while i < sqrt(n) and rm = 1 loop
        if mod (n,i) = 0 then
            rm := 0;
        end if;
        i := i+1;
    end loop;
    return rm;
end;
/
SELECT isPrime(2638623) FROM dual;


SELECT sysdate FROM dual;

---------------------------------------------------------

/* 
4. Write a procedure which prints out the n-th Fibonacchi number. 
   fib1 = 0, fib2 = 1, fib3 = 1, fib4 = 2 ... stb.
   return nth fib num
*/
create or replace function fibo (n INTEGER) return INTEGER is
    a INTEGER := 0;
    b INTEGER := 1;
    c INTEGER := 1;
begin
    for i in 1..n loop
        a :=b;
        b :=c;
        c :=a+b;
        dbms_output.put(a);
    end loop;
    return a;
end;
/
SELECT fibo(10) FROM dual;
call fib(10);

--4, Factorial function
create or replace function fac(n INTEGER) return INTEGER is
begin
    if n=1 then
        return 1;
    else
        return n*fac(n-1);
    end if;       
end;
/
select fac(5) from dual;


--5, Calculate sum from a text





--Find GCD of two integers!
create or replace function gcd(a INTEGER,b INTEGER) return INTEGER is
    rm INTEGER :=b;
begin
    if a =0 then 
        return b;
    end if; 
    if b = 0 then 
         return a;
    end if;
    if a = b then 
         return b;
    end if;
    
    if a>b then
        return gcd((a-b),b);
    end if;
     return gcd(a,(b-a));
        
end;
/
select gcd(3570,7293) from dual;


--Give the number of occurrences of second string parameter in first string parameter!
create or replace function num_times(str VARCHAR, sub VARCHAR) return INTEGER is
    str2 varchar(255) := str;
    lensub integer := length(sub);
    cnt integer := 0;  
begin
    while instr(str2,sub)>0 loop
    cnt := cnt+1;
    str2 := substr(str2, instr(str2,sub)+lensub);
    end loop;
    return cnt;
end;
/
select num_times('gagaggagaag','gb') from dual;
select num_times('gagagaga','ga') from dual;

select instr('gagaga','ga') from dual;
select length('ga') from dual;
select substr('gagaga',instr('gagaga','ga')+2) from dual;


select * from emp;
--Give the average salary of people at parameter department!
create or replace function dep_avg(n INTEGER) return float is
    res integer :=0;
begin
    select avg(sal) into res
    from emp
    group by deptno
    having deptno = n;
    return res;
end;
/
SELECT dep_avg(30) from dual;
