create or replace procedure proc1 is
    type str_arr is table of varchar(30) index by binary_integer;
    arr str_arr;
begin
    arr(1) := 'Hello';
    arr(2) := 'World';
    dbms_output.put_line(arr(arr.first) || ' ' || arr(2)); --arr.first give backfirst index
    --arr.last
   
end;
/
set serveroutput on;
exec proc1;


/* Insert, Delete, Update
Write a procedure which increases the salary of the employees who has salary category p (p is parameter).
The increment should be the minimal salary of the employee's own department.
After executing the update statement, the procedure should print out the average salary of all employees.
*/
CREATE OR REPLACE PROCEDURE upd_cat(p integer) IS
    avg_sal number;
begin
    update emp2 e1
    set sal = sal + (
        select min(sal)
        from emp2 e2
        where e2.deptno = e1.deptno
    )
    where e1.empno in (
        select empno
        from emp2 join sal_cat2 sc on emp2.sal between sc.lowest_sal and sc.highest_sal
        where sc.category = p
    );
    select avg(sal) into avg_sal
    from emp2;
    
    dbms_output.put_line('Avg sal:' || avg_sal);     
end;
/
execute upd_cat(2);

/* Associative array
Write a procedure which takes the first n (n is the parameter) prime numbers and puts them into 
an associative array. The procedure should print out the last prime and the total sum of the prime numbers.
*/

CREATE OR REPLACE PROCEDURE primes(n integer) IS
    num integer :=0;
    i integer := 0;
    j integer := 2;
    type int_array is table of integer(10) index by binary_integer;
    arr int_array;
    arr_sum integer :=0;
begin
    while i <= n loop
        if isPrime(j)=1 then
            i :=i+1;
            arr(i) := j;
            arr_sum := arr_sum+j;
        end if;
        j :=j+1;
    end loop;
    dbms_output.put_line('last: ' || arr(arr.last));
    dbms_output.put_line('sum: ' || arr_sum);
end;
/
set serveroutput on;
exec primes(3);
